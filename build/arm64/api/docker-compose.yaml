version: "3"
services:
  postgresql:
    image: gjhong1129/examples:chat_server_db_arm64_v0.0.1
    container_name: chat_server_db_v0.0.9
    restart: always
    networks:
      - chat_server_network
    ports:
      - "26000:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PWD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./volume/graphgresql/data/:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: chat_server_redis_v0.0.2
    restart: always
    networks:
      - chat_server_network
    ports:
      - "25000:6379"
    volumes:
      - ./volume/redis/data/:/data
    command: redis-server --port 6379 --save 60 1 --loglevel warning
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  chat_server:
    image: gjhong1129/examples:chat_server_arm64_v0.0.2
    container_name: chat_server_v0.0.2
    restart: always
    networks:
      - chat_server_network
      - chat_server_front_network
    external_links:
      - haproxy:haproxy
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      master_rabbitmq_node:
        condition: service_healthy
      # - slave_rabbitmq_node_1
      # - slave_rabbitmq_node_2
networks:

  chat_server_network:
    driver: bridge
  chat_server_front_network:
    external : true
    
  # slave_rabbitmq_node_1:
  #   image: gjhong1129/examples:rmq_arm64_v0.0.1
  #   container_name: slave_rmq_node_1_v0.0.1
  #   hostname: slave_rmq_node_1
  #   command: rabbitmq-server
  #   restart: always
  #   networks:
  #     - chat_server_network
  #   # links:
  #   #   - master_rabbitmq_node
  #   # ports:
  #   #   - "15671:15671"
  #   #   - "15676:15676"
  #   volumes:
  #     - ./volume/slave_rmq_node_1/data/:/var/lib/rabbitmq/
  #     - ./volume/slave_rmq_node_1/log/:/var/log/rabbitmq/
  #   environment:
  #     - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
  #     - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
  #     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
  #     - CLUSTERED=true
  #     - CLUSTER_WITH=master_rmq_node
  #     - RAM_NODE=false
  #   healthcheck:
  #     test: [ "CMD", "nc", "-z", "localhost", "5671" ]
  #     interval: 5s
  #     timeout: 15s
  #     retries: 1

  # slave_rabbitmq_node_2:
  #   image: gjhong1129/examples:rmq_arm64_v0.0.1
  #   container_name: slave_rmq_node_2_v0.0.1
  #   hostname: slave_rmq_node_2
  #   command: rabbitmq-server
  #   networks:
  #     - chat_server_network
  #   # links:
  #   #   - master_rabbitmq_node
  #   #   - slave_rabbitmq_node_1
  #   # ports:
  #   #   - "15671:15671"
  #   #   - "15676:15676"
  #   volumes:
  #     - ./volume/slave_rmq_node_2/data/:/var/lib/rabbitmq/
  #     - ./volume/slave_rmq_node_2/log/:/var/log/rabbitmq/
  #   environment:
  #     - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
  #     - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
  #     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
  #     - CLUSTERED=true
  #     - CLUSTER_WITH=master_rmq_node
  #     - RAM_NODE=false
  #   healthcheck:
  #     test: [ "CMD", "nc", "-z", "localhost", "5671" ]
  #     interval: 5s
  #     timeout: 15s
  #     retries: 1

  # haproxy:
  #   image: gjhong1129/examples:chat_server_haproxy_arm64_v0.0.1
  #   container_name: haproxy_v0.0.1
  #   hostname: haproxy
  #   restart: always
  #   ports:
  #     - "443:443"
  #     - "5671:5671"
  #     # - "1936:1936"
  #   networks:
  #     - chat_server_network
  #   depends_on:
  #     - postgresql
  #     - redis
  #     - master_rabbitmq_node
  #     - slave_rabbitmq_node_1
  #     - slave_rabbitmq_node_2
  #     # 도커 네트워크 : 컨테이너 네트워크



